/*
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.layer1.clients.java8.digital.api;

import com.layer1.clients.java8.digital.invoker.ApiException;
import com.layer1.clients.java8.digital.model.ApiError;
import com.layer1.clients.java8.digital.model.AssetPoolSummary;
import com.layer1.clients.java8.digital.model.Balance;
import com.layer1.clients.java8.digital.model.CreateAssetPoolRequest;
import java.util.UUID;
import com.layer1.clients.java8.digital.model.UpdateAssetPoolRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AssetPoolApi
 */
@Disabled
public class AssetPoolApiTest {

    private final AssetPoolApi api = new AssetPoolApi();

    /**
     * Create asset pool
     *
     * Creates a new asset pool which serves as a collection of assets
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAssetPoolTest() throws ApiException {
        CreateAssetPoolRequest createAssetPoolRequest = null;
        String response = api.createAssetPool(createAssetPoolRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete asset pool
     *
     * Delete asset pool with given id if it has not addresses nor transactions created
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAssetPoolTest() throws ApiException {
        UUID assetPoolId = null;
        api.deleteAssetPool(assetPoolId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get asset pool
     *
     * Retrieve a specific asset pool given id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetPoolTest() throws ApiException {
        UUID assetPoolId = null;
        String response = api.getAssetPool(assetPoolId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get asset pool balance
     *
     * Retrieve an asset pool balance for specific network and asset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetPoolBalanceTest() throws ApiException {
        UUID assetPoolId = null;
        String network = null;
        String asset = null;
        Balance response = api.getAssetPoolBalance(assetPoolId, network, asset)
                .execute();
        // TODO: test validations
    }

    /**
     * Get max asset pool withdrawable balance
     *
     * Retrieve maximal approximate (does not take fees into account) amount withdrawable for specific network and asset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetPoolMaxWithdrawableAmountTest() throws ApiException {
        UUID assetPoolId = null;
        String network = null;
        String asset = null;
        Balance response = api.getAssetPoolMaxWithdrawableAmount(assetPoolId, network, asset)
                .execute();
        // TODO: test validations
    }

    /**
     * Get asset pool summary
     *
     * Retrieve authenticated summary across all asset pools.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetPoolSummaryTest() throws ApiException {
        AssetPoolSummary response = api.getAssetPoolSummary()
                .execute();
        // TODO: test validations
    }

    /**
     * List asset pools
     *
     * Retrieve paginated list of asset pools
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAssetPoolsTest() throws ApiException {
        Integer pageNumber = null;
        Integer pageSize = null;
        api.listAssetPools(pageNumber, pageSize)
                .execute();
        // TODO: test validations
    }

    /**
     * Update asset pool
     *
     * Update an asset pool
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAssetPoolTest() throws ApiException {
        UUID assetPoolId = null;
        UpdateAssetPoolRequest updateAssetPoolRequest = null;
        String response = api.updateAssetPool(assetPoolId, updateAssetPoolRequest)
                .execute();
        // TODO: test validations
    }

}
