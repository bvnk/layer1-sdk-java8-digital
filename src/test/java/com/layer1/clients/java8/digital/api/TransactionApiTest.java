/*
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.layer1.clients.java8.digital.api;

import com.layer1.clients.java8.digital.invoker.ApiException;
import com.layer1.clients.java8.digital.model.ApiError;
import com.layer1.clients.java8.digital.model.PaginatedResultTransaction;
import com.layer1.clients.java8.digital.model.Transaction;
import com.layer1.clients.java8.digital.model.TransactionClaimRequest;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionApi
 */
@Disabled
public class TransactionApiTest {

    private final TransactionApi api = new TransactionApi();

    /**
     * Claim blockchain transaction
     *
     * Claim an existing blockchain transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void claimTransactionTest() throws ApiException {
        TransactionClaimRequest transactionClaimRequest = null;
        api.claimTransaction(transactionClaimRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Get transaction
     *
     * Get transaction by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransactionByIdTest() throws ApiException {
        String transactionId = null;
        Transaction response = api.getTransactionById(transactionId)
                .execute();
        // TODO: test validations
    }

    /**
     * List transactions
     *
     * Retrieve paginated list of transactions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTransactionsTest() throws ApiException {
        UUID assetPoolId = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        String q = null;
        PaginatedResultTransaction response = api.listTransactions(assetPoolId, pageNumber, pageSize)
                .q(q)
                .execute();
        // TODO: test validations
    }

}
