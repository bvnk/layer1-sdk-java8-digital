/*
 * Digital Asset
 * Layer1 API making management of crypto assets simple and easy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.layer1.clients.java8.digital.api;

import com.layer1.clients.java8.digital.invoker.ApiException;
import com.layer1.clients.java8.digital.model.Address;
import com.layer1.clients.java8.digital.model.ApiError;
import com.layer1.clients.java8.digital.model.CreateAddressRequest;
import com.layer1.clients.java8.digital.model.PaginatedResultAddress;
import java.util.UUID;
import com.layer1.clients.java8.digital.model.ValidateAddressRequest;
import com.layer1.clients.java8.digital.model.ValidateAddressResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddressApi
 */
@Disabled
public class AddressApiTest {

    private final AddressApi api = new AddressApi();

    /**
     * Create a new address
     *
     * Creates a new address
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAddressTest() throws ApiException {
        CreateAddressRequest createAddressRequest = null;
        Address response = api.createAddress(createAddressRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Get address
     *
     * Retrieve select address details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAddressTest() throws ApiException {
        UUID addressId = null;
        List<Address> response = api.getAddress(addressId)
                .execute();
        // TODO: test validations
    }

    /**
     * List addresses
     *
     * Retrieve paginated list of addresses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAddressesTest() throws ApiException {
        UUID assetPoolId = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        String q = null;
        PaginatedResultAddress response = api.listAddresses(assetPoolId, pageNumber, pageSize)
                .q(q)
                .execute();
        // TODO: test validations
    }

    /**
     * List address tags
     *
     * Retrieve paginated list of address tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsTest() throws ApiException {
        UUID addressId = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        PaginatedResultAddress response = api.listTags(addressId, pageNumber, pageSize)
                .execute();
        // TODO: test validations
    }

    /**
     * Validate address
     *
     * Validate a blockchain address
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validateAddressTest() throws ApiException {
        ValidateAddressRequest validateAddressRequest = null;
        ValidateAddressResponse response = api.validateAddress(validateAddressRequest)
                .execute();
        // TODO: test validations
    }

}
